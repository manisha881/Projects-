// Create and alter Tables on movie Database by using create command and alter command;

create table cust
(
Cust_id varchar(3) primary key,
lname varchar(15),
fname varchar(15),
area varchar(2),
phone_no int
);

create table movie
(
mv_no varchar(2) primary key,
title varchar(25),
type varchar(10),
star varchar(25)
);

create table invoice
(
Inv_no varchar(3) primary key,
Mv_no varchar(2),
Cust_id varchar(3),
Issue_date date,
Return_date date
);

alter table invoice
add constraint c1
foreign key(cust_id)
references cust(cust_id);

alter table invoice
add constraint c2
foreign key(mv_no)
references movie(mv_no);

alter table movie
add price float (8,2);

// Insert values  in  movie Database by using insert command ;

insert into cust values ('a01','Bayross','Ivan','sa',6125467);
insert into cust values ('a02','Saitwal','Vandana','mu',5560379);
insert into cust values ('a03','Jaguste','Pramada','da',4563891);
insert into cust values ('a04','Navindgi','Basu','ba',6125401);
insert into cust  values ('a05','Sreedharan','Ravi','va');
insert into cust values ('a06',' ','Rukmini','gh',5125274);

insert into movie values ('1','bloody vengeance','action','jackie chan',180.95);
insert into movie values ('2','the firm','thriller','tom cruise',200.00);
insert into movie values ('3','pretty woman','romance','richard gere',200.00);
insert into movie values ('4','home alone','comedy','macaulay culkin',150);
insert into movie values ('5','the fugitive','thriller','harisson ford',200.00);
insert into movie values ('6','coma','suspense','michael douglas',100.00);
insert into movie values ('7','dracula','horror','gary oldman',150.25);
insert into movie values ('8','quick change','comedy','bill muray',100.00);
insert into movie values ('9','gone with the wind','drama','clarke gable',200.00);
insert into movie values ('10','carry on doctor','comedy','leslie phillips',100.00);

insert into invoice values ('i01','4','a01','1993-07-23','1993-07-25');
insert into invoice values ('i02','3','a02','1993-08-13','1993-08-15');
insert into invoice values ('i03','1','a02','15-08-15','1993-08-18');
insert into invoice values ('i04','6','a03','1993-09-10','1993-09-12');
insert into invoice values ('i05','7','a04','1993-08-05','1993-08-08');
insert into invoice values ('i06','2','a06','1993-09-18','1993-09-21');
insert into invoice values ('i07','9','a05','1993-07-07','1993-07-10');
insert into invoice values ('i08','9','a01','1993-08-11','1993-08-14');
insert into invoice values ('i09','5','a03','1993-07-06','1993-07-07');
insert into invoice values ('i10','8','a06','1993-09-03','1993-09-06');

//Basic Queries perform on movie Database like- update,delete,select,like operators etc,

select * from cust;
select * from invoice;
select * from movie;

1)--Retrieve the list of fname and lname of all the customers.
select fname,lname from cust;

2)--Retrieve the list of fname and the area of all the customers.
select fname,area from cust;

3)--List the various movie types available from the movie table.
select type from movie;

4)--Change the telephone number of prarnada to 466389.
update cust set phone_no=466389 where fname='Pramada';

5)--Change the issue - date of cust- id 'A01' to 24/07/93.
update invoice set issue_date='1993-07-24' where cust_id='a01';

6)--Change the price of  'gone with the wind' to Rs. 250. 00.
update movie set price=250.00 where title='gone with the wind';

7)--Delete the record with invoice number 'l 08' from the invoice table.
delete from invoice where inv_no='i08';

8)--Delete all the records having return date before 10th July'93
delete from invoice where return_date<'1993-07-10';

9)--Find the names of all customers having 'a' as the second letter in their fnames.
select fname,lname from cust where fname like '_a%';

10)--Find the lnames of all customers that begin with 's ' or  'j' .
select lname from cust where lname like 'S%' or lname like 'J%';

11)--Find out the customers who stay in an area whose second letter is 'a'.
select * from cust where area like '_a';

12)--Find the list of all customers who stay in area 'da' or area 'mu' or area 'gh'.
select * from cust where area in ('da','mu','gh');

13)--Print the list of customers whose phone numbers are greater than the value 555000.
select * from cust where phone_no>555000;

14)/*Print the information from invoice table of customers who have been issued movies in the month of September.
*/
15)select * from invoice where issue_date like '%09%';

16)--Display the invoice table information for cust – id 'a01' and 'a02'.
select * from invoice where cust_id in ('a01','a02');

17)--Find the movies of type 'action' and ‘comedy’.
select title from movie where type in ('action','comedy');

18)--Find the movies whose price is greater than 150 and less than or equal to 200.
select * from movie where price>150 and price<=200;

19)--Rename the new column in the above query as new-price. 
select price*15 "NEW_PRICE" from movie where price>150;

20) List the mv-no and inv-no of customers having inv-no less than 'i05'from the Invoice Transaction Table.
    select mv_no,inv_no from invoice where inv_no<'i05';

// Aggregate functions and clauses perform on movie Database;

21)--Calculate the square root of the price of each movie.
select sqrt(price) from movie;

22)--Count the total number of customers.
select count(cust_id) from cust;

23)--Calculate the total price of all the movies.
select sum(price) from movie;

24)--Count the number of movies having price greater than or equal to 150.
select count(mv_no) from movie where price>=150;

25)--Print the type and average price of each movie.
select type,avg(price) from movie group by type;

26)--Find the number of movies in each type.
select type,count(type) from movie group by type;

27)--Count separately the number of movies in the 'comedy' and 'thriller' types.
select type,count(type) from movie group by type having type in('comedy','thriller');

28)--Calculate the average price for each type that has a maximum price of 150.00.
select type,avg(price) from movie where price<=150 group by type;

29)Calculate the average price of all movies where type is 'comedy' or 'thriller' and price is greater than or equal to 150.00.
select type,avg(price) from movie where price>=150 group by type having type in ('comedy','thriller');

30)--Display the invoice number and day on which customers were issued movies.
select inv_no,issue_date from invoice;

// SubQuery,and Join Operations perform on movie Database;

31)--List the movie number, movie names issued to all customers.
select mv_no,title from movie where mv_no in (select mv_no from invoice);

32)--Find the type and movie number of movie issued to cust – id 'a01' and 'a02'.
select type,mv_no from movie where mv_no in (select mv_no from invoice where cust_id in ('a01','a02'));

* join Operations *

33)Select invoice.Inv_no,invoice.issue_date,cust.Cust_id,cust.fname
FROM invoice  
INNER JOIN cust 
ON cust.Cust_id=invoice.Cust_id;

34)select movie.mv_no,movie.title,movie.star,movie.price,invoice.mv_no
from movie cross join invoice;

35)select *from movie cross join invoice;

36)Select invoice.Inv_no,invoice.issue_date,cust.Cust_id,cust.fname,cust.lname
FROM invoice  
left outer JOIN cust 
ON cust.Cust_id=invoice.Cust_id;

37)Select movie.title,movie.type,movie.price,invoice.issue_date,invoice.Return_date
FROM movie  
right outer JOIN invoice
ON movie.Mv_no=invoice.Mv_no;
